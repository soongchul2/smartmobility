import streamlit as st
import random

def generate_quote(topic):
    if topic == "love":
        quotes = [
            "사랑은 세상을 움직이는 힘입니다.",
            "사랑은 어떤 상황에서도 이길 수 있는 유일한 힘입니다.",
            "사랑은 마음의 언어입니다.",
            "사랑은 두 개의 영혼이 하나의 몸에 살고 있는 것입니다.",
            "진정으로 사랑하는 것은 평온을 찾는 것입니다.",
            "사랑은 봄처럼 오지만 언제나 내 마음에 봄을 지니고 있습니다.",
            "사랑은 무엇보다도 기꺼이 받아들여야 하는 것입니다.",
            "사랑은 상처받기 쉬운 것이지만, 동시에 가장 아름다운 것입니다.",
            "사랑은 우리가 다른 사람을 그들이 되고자 하는 대로 인정하는 것입니다.",
            "진정한 사랑은 절대로 시들지 않습니다."
        ]

    elif topic == "study":
        quotes = [
            "학습은 인생의 전선입니다",
            "지식은 인생에서 가장 좋은 투자입니다.",
            "공부는 우리가 미래를 창조하는 것입니다.",
            "공부는 우리를 더 나은 사람으로 만듭니다.",
            "학습은 생각의 날개입니다.",
            "공부는 스스로를 발견하는 여정입니다.",
            "공부는 인생을 풍요롭게 만듭니다."
        ]

    elif topic == "success":
        quotes = [
            "성공은 준비된 자에게 찾아옵니다.",
            "성공은 어려움을 극복한 뒤에 찾아오는 것입니다.",
            "성공은 끊임없는 노력과 포기하지 않음에서 비롯됩니다.",
            "성공은 좋은 계획과 훌륭한 실행으로 이루어집니다." ,
            "성공은 실패로부터 일어나는 능력을 갖춘 사람에게 찾아옵니다.",
            "성공은 절대로 포기하지 않는 의지와 끈기로 이루어집니다.",
            "성공은 자신의 열정을 따르는 것입니다.",
            "성공은 자신의 능력을 최대한 발휘하는 것입니다.",
            "성공은 어려움을 극복하는 능력과 의지에서 비롯됩니다.",
            "성공은 어려운 시기에도 희망을 잃지 않는 것입니다."
        ]
    
    else:
        quotes = []

    if  quotes:
        return random.choice(quotes)
    else:
        return "선택한 주제에 대한 명언을 찾을 수 없습니다."

def main():
    st.title("명언 생성기")

    # 사용자로부터 주제 선택
    topic = st.selectbox("주제를 선택하세요", ["love", "study", "success"])

    # 명언 생성 및 표시
    quote = generate_quote(topic)
    st.subheader("명언:")
    st.write(quote)

if __name__ == '__main__':
    main()

